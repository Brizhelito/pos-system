// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/prisma-client"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum role {
  SELLER
  ADMIN
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  role      role     @default(SELLER)
  createdAt DateTime
  updatedAt DateTime @default(now())
  Sale      Sale?
}

model Product {
  id            Int       @id @default(autoincrement())
  name          String
  description   String?
  purchasePrice Int
  sellingPrice  Int
  stock         Int
  minStock      Int
  categoryId    Int       @unique
  category      Category  @relation(fields: [categoryId], references: [id])
  providerId    Int       @unique
  provider      Provider  @relation(fields: [providerId], references: [id])
  saleItem      SaleItem?
  createdAt     DateTime
  updatedAt     DateTime  @default(now())
}

model Category {
  id      Int      @id @default(autoincrement())
  name    String   @unique
  Product Product?
}

model Provider {
  id          Int      @id @default(autoincrement())
  name        String
  contactInfo String
  Product     Product?
}

enum Identifier {
  V
  E
  J
  P
}

model Customer {
  id         Int        @id @default(autoincrement())
  name       String
  identifier Identifier
  address    String
  phone      String
  email      String
  createdAt  DateTime
  updateTime DateTime   @default(now())
  Sale       Sale?
  Invoice    Invoice?
}

model Sale {
  id         Int        @id @default(autoincrement())
  saleDate   DateTime
  customerId Int        @unique
  customer   Customer   @relation(fields: [customerId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  userId     Int        @unique
  user       User       @relation(fields: [userId], references: [id])
  saleItem   SaleItem[]
  Invoice    Invoice?
}

model SaleItem {
  id           Int     @id @default(autoincrement())
  saleId       Int
  sale         Sale    @relation(fields: [saleId], references: [id])
  productId    Int     @unique
  product      Product @relation(fields: [productId], references: [id])
  quantity     Int
  unitPrice    Decimal
  itemSubtotal Decimal
}

model Invoice {
  id          Int           @id @default(autoincrement())
  invoiceDate DateTime
  saleId      Int           @unique
  sale        Sale          @relation(fields: [saleId], references: [id])
  customerId  Int           @unique
  customer    Customer      @relation(fields: [customerId], references: [id])
  status      InvoiceStatus
  createdAt   DateTime
  updatedAt   DateTime      @default(now())
}

enum InvoiceStatus {
  ISSUED
  PAID
  CANCELLED
}
